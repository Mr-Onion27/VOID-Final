{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\govin\\\\OneDrive\\\\Desktop\\\\my-app\\\\my-app\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jwtDecode } from \"jwt-decode\"; // ✅ FIXED named import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRole\n}) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    state: {\n      error: \"Session expired\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 22\n  }, this);\n  try {\n    const decoded = jwtDecode(token);\n    const roleField = allowedRole === \"student\" ? \"regno\" : allowedRole === \"faculty\" ? \"fac_id\" : allowedRole === \"admin\" ? \"adminID\" : null;\n    if (!decoded || !decoded[roleField]) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        state: {\n          error: \"Unauthorized access\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  } catch (error) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      state: {\n        error: \"Invalid session\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRole","token","localStorage","getItem","to","state","error","fileName","_jsxFileName","lineNumber","columnNumber","decoded","roleField","_c","$RefreshReg$"],"sources":["C:/Users/govin/OneDrive/Desktop/my-app/my-app/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { jwtDecode } from \"jwt-decode\"; // ✅ FIXED named import\r\n\r\nconst ProtectedRoute = ({ children, allowedRole }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (!token) return <Navigate to=\"/\" state={{ error: \"Session expired\" }} />;\r\n\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n\r\n    const roleField = allowedRole === \"student\" ? \"regno\"\r\n                   : allowedRole === \"faculty\" ? \"fac_id\"\r\n                   : allowedRole === \"admin\" ? \"adminID\"\r\n                   : null;\r\n\r\n    if (!decoded || !decoded[roleField]) {\r\n      return <Navigate to=\"/\" state={{ error: \"Unauthorized access\" }} />;\r\n    }\r\n\r\n    return children;\r\n  } catch (error) {\r\n    return <Navigate to=\"/\" state={{ error: \"Invalid session\" }} />;\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EACpD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE,oBAAOJ,OAAA,CAACH,QAAQ;IAACU,EAAE,EAAC,GAAG;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAkB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE3E,IAAI;IACF,MAAMC,OAAO,GAAGhB,SAAS,CAACM,KAAK,CAAC;IAEhC,MAAMW,SAAS,GAAGZ,WAAW,KAAK,SAAS,GAAG,OAAO,GACpCA,WAAW,KAAK,SAAS,GAAG,QAAQ,GACpCA,WAAW,KAAK,OAAO,GAAG,SAAS,GACnC,IAAI;IAErB,IAAI,CAACW,OAAO,IAAI,CAACA,OAAO,CAACC,SAAS,CAAC,EAAE;MACnC,oBAAOf,OAAA,CAACH,QAAQ;QAACU,EAAE,EAAC,GAAG;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAsB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACrE;IAEA,OAAOX,QAAQ;EACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACd,oBAAOT,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,GAAG;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjE;AACF,CAAC;AAACG,EAAA,GArBIf,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}