{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\govin\\\\OneDrive\\\\Desktop\\\\my-app\\\\my-app\\\\frontend\\\\src\\\\components\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../css/studentDashboard.css\";\n\n//const handleRoomClick = (room) => {\n//  alert(`You clicked on ${room[\"ROOM NUMBER\"] || room.roomNumber}`);\n//};\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [selectedDay, setSelectedDay] = useState(\"Monday\");\n  const [selectedTime, setSelectedTime] = useState(\"8:00 AM - 8:50 AM\");\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [filteredRooms, setFilteredRooms] = useState([]);\n  const [selectedBlocks, setSelectedBlocks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n  const timeSlots = [\"8:00 AM - 8:50 AM\", \"9:00 AM - 9:50 AM\", \"10:00 AM - 10:50 AM\", \"11:00 AM - 11:50 AM\", \"12:00 PM - 12:50 PM\", \"2:00 PM - 2:50 PM\", \"3:00 PM - 3:50 PM\", \"4:00 PM - 4:50 PM\", \"5:00 PM - 5:50 PM\", \"6:00 PM - 6:50 PM\"];\n  const blocks = [\"SJT\", \"TT\", \"MGB\", \"ALM\", \"CDMM\", \"GDN\", \"PRP\", \"CTS\", \"SMV\", \"MB\"];\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      try {\n        const payload = JSON.parse(decodeURIComponent(escape(atob(token.split(\".\")[1]))));\n        setUser(payload);\n      } catch (error) {\n        console.error(\"Error decoding token:\", error);\n      }\n    }\n  }, []);\n  const handleBlockCheckboxChange = block => {\n    if (selectedBlocks.includes(block)) {\n      setSelectedBlocks(selectedBlocks.filter(b => b !== block));\n    } else {\n      setSelectedBlocks([...selectedBlocks, block]);\n    }\n  };\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/classrooms/available-rooms\", {\n        params: {\n          day: selectedDay,\n          time: selectedTime\n        }\n      });\n      const allRooms = response.data;\n      const filtered = selectedBlocks.length > 0 ? allRooms.filter(room => {\n        const roomStr = (room[\"ROOM NUMBER\"] || room.roomNumber || \"\").toUpperCase();\n        const blockMatch = roomStr.match(/^[A-Z]+/);\n        const block = blockMatch ? blockMatch[0] : \"\";\n        return selectedBlocks.includes(block);\n      }) : allRooms;\n      setAvailableRooms(allRooms);\n      setFilteredRooms(filtered);\n    } catch (error) {\n      console.error(\"Error fetching classrooms:\", error);\n      setAvailableRooms([]);\n      setFilteredRooms([]);\n    }\n  };\n  const handleReset = () => {\n    setSelectedDay(\"Monday\");\n    setSelectedTime(\"8:00 AM - 8:50 AM\");\n    setSelectedBlocks([]);\n    setSearchTerm(\"\");\n    setAvailableRooms([]);\n    setFilteredRooms([]);\n  };\n\n  // Group filtered rooms by block\n  const groupedRooms = filteredRooms.reduce((acc, room) => {\n    const roomStr = (room[\"ROOM NUMBER\"] || room.roomNumber || \"\").toUpperCase();\n    const blockMatch = roomStr.match(/^[A-Z]+/);\n    const block = blockMatch ? blockMatch[0] : \"Others\";\n    if (!acc[block]) acc[block] = [];\n    acc[block].push(room);\n    return acc;\n  }, {});\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const toggleChat = () => {\n    setIsChatOpen(prev => !prev);\n  };\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = async () => {\n    if (message.trim() === \"\") return;\n    setMessages(prevMessages => [...prevMessages, message]);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/message/send\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sender: (user === null || user === void 0 ? void 0 : user.name) || \"Anonymous\",\n          text: message\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to send message\");\n      }\n    } catch (error) {\n      console.error(\"Error sending message to backend:\", error);\n    }\n    setMessage(\"\");\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"role\");\n    window.location.href = \"/std_log\"; // or use navigate(\"/student-login\") if using react-router\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Student Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this), user ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"day\",\n          children: \"Day:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"day\",\n          value: selectedDay,\n          onChange: e => setSelectedDay(e.target.value),\n          children: days.map((day, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: day,\n            children: day\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"time\",\n          value: selectedTime,\n          onChange: e => setSelectedTime(e.target.value),\n          children: timeSlots.map((time, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: time,\n            children: time\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-filter\",\n        children: blocks.map((block, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: block,\n            checked: selectedBlocks.includes(block),\n            onChange: () => handleBlockCheckboxChange(block)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), block]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search room number...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"room-search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Available Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this), Object.keys(groupedRooms).length > 0 ? Object.entries(groupedRooms).map(([block, rooms]) => {\n          const filteredBySearch = rooms.filter(room => (room[\"ROOM NUMBER\"] || room.roomNumber || \"\").toLowerCase().includes(searchTerm.toLowerCase()));\n          if (filteredBySearch.length === 0) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"block-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: block\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"room-grid\",\n              children: filteredBySearch.map((room, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"room-box\"\n                // onClick={() => handleRoomClick(room)}\n                ,\n                children: room[\"ROOM NUMBER\"] || room.roomNumber || \"No Room Name\"\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, block, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No rooms available for this slot.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      onClick: toggleChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 1\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"ChatBot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-btn\",\n          onClick: toggleChat,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message user\",\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\") handleSendMessage();\n          },\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"chat-send-btn\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"EvLOYulOU2s9z41zjWShs5Y6bUo=\");\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudentDashboard","_s","user","setUser","selectedDay","setSelectedDay","selectedTime","setSelectedTime","availableRooms","setAvailableRooms","filteredRooms","setFilteredRooms","selectedBlocks","setSelectedBlocks","searchTerm","setSearchTerm","days","timeSlots","blocks","token","localStorage","getItem","payload","JSON","parse","decodeURIComponent","escape","atob","split","error","console","handleBlockCheckboxChange","block","includes","filter","b","handleSearch","response","get","params","day","time","allRooms","data","filtered","length","room","roomStr","roomNumber","toUpperCase","blockMatch","match","handleReset","groupedRooms","reduce","acc","push","isChatOpen","setIsChatOpen","toggleChat","prev","message","setMessage","messages","setMessages","handleSendMessage","trim","prevMessages","fetch","method","headers","body","stringify","sender","name","text","ok","Error","handleLogout","removeItem","window","location","href","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","index","type","checked","placeholder","Object","keys","entries","rooms","filteredBySearch","toLowerCase","idx","msg","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/govin/OneDrive/Desktop/my-app/my-app/frontend/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../css/studentDashboard.css\";\r\n\r\n//const handleRoomClick = (room) => {\r\n//  alert(`You clicked on ${room[\"ROOM NUMBER\"] || room.roomNumber}`);\r\n//};\r\n\r\nfunction StudentDashboard() {\r\n  const [user, setUser] = useState(null);\r\n  const [selectedDay, setSelectedDay] = useState(\"Monday\");\r\n  const [selectedTime, setSelectedTime] = useState(\"8:00 AM - 8:50 AM\");\r\n  const [availableRooms, setAvailableRooms] = useState([]);\r\n  const [filteredRooms, setFilteredRooms] = useState([]);\r\n  const [selectedBlocks, setSelectedBlocks] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\r\n  const timeSlots = [\r\n    \"8:00 AM - 8:50 AM\",\r\n    \"9:00 AM - 9:50 AM\",\r\n    \"10:00 AM - 10:50 AM\",\r\n    \"11:00 AM - 11:50 AM\",\r\n    \"12:00 PM - 12:50 PM\",\r\n    \"2:00 PM - 2:50 PM\",\r\n    \"3:00 PM - 3:50 PM\",\r\n    \"4:00 PM - 4:50 PM\",\r\n    \"5:00 PM - 5:50 PM\",\r\n    \"6:00 PM - 6:50 PM\",\r\n  ];\r\n\r\n  const blocks = [\"SJT\", \"TT\", \"MGB\", \"ALM\", \"CDMM\", \"GDN\", \"PRP\", \"CTS\", \"SMV\", \"MB\"];\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      try {\r\n        const payload = JSON.parse(\r\n          decodeURIComponent(escape(atob(token.split(\".\")[1])))\r\n        );\r\n        setUser(payload);\r\n      } catch (error) {\r\n        console.error(\"Error decoding token:\", error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleBlockCheckboxChange = (block) => {\r\n    if (selectedBlocks.includes(block)) {\r\n      setSelectedBlocks(selectedBlocks.filter((b) => b !== block));\r\n    } else {\r\n      setSelectedBlocks([...selectedBlocks, block]);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5000/api/classrooms/available-rooms\",\r\n        {\r\n          params: { day: selectedDay, time: selectedTime },\r\n        }\r\n      );\r\n\r\n      const allRooms = response.data;\r\n\r\n      const filtered = selectedBlocks.length > 0\r\n        ? allRooms.filter((room) => {\r\n            const roomStr = (room[\"ROOM NUMBER\"] || room.roomNumber || \"\").toUpperCase();\r\n            const blockMatch = roomStr.match(/^[A-Z]+/);\r\n            const block = blockMatch ? blockMatch[0] : \"\";\r\n            return selectedBlocks.includes(block);\r\n          })\r\n        : allRooms;\r\n\r\n      setAvailableRooms(allRooms);\r\n      setFilteredRooms(filtered);\r\n    } catch (error) {\r\n      console.error(\"Error fetching classrooms:\", error);\r\n      setAvailableRooms([]);\r\n      setFilteredRooms([]);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setSelectedDay(\"Monday\");\r\n    setSelectedTime(\"8:00 AM - 8:50 AM\");\r\n    setSelectedBlocks([]);\r\n    setSearchTerm(\"\");\r\n    setAvailableRooms([]);\r\n    setFilteredRooms([]);\r\n  };\r\n\r\n  // Group filtered rooms by block\r\n  const groupedRooms = filteredRooms.reduce((acc, room) => {\r\n    const roomStr = (room[\"ROOM NUMBER\"] || room.roomNumber || \"\").toUpperCase();\r\n    const blockMatch = roomStr.match(/^[A-Z]+/);\r\n    const block = blockMatch ? blockMatch[0] : \"Others\";\r\n    if (!acc[block]) acc[block] = [];\r\n    acc[block].push(room);\r\n    return acc;\r\n  }, {});\r\n  \r\n  const [isChatOpen, setIsChatOpen] = useState(false);\r\n\r\n  const toggleChat = () => {\r\n    setIsChatOpen((prev) => !prev);\r\n  };\r\n  const [message, setMessage] = useState(\"\");\r\nconst [messages, setMessages] = useState([]);\r\n\r\nconst handleSendMessage = async () => {\r\n  if (message.trim() === \"\") return;\r\n\r\n  setMessages((prevMessages) => [...prevMessages, message]);\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/message/send\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ sender: user?.name || \"Anonymous\", text: message }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to send message\");\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error(\"Error sending message to backend:\", error);\r\n  }\r\n\r\n  setMessage(\"\");\r\n};\r\n\r\nconst handleLogout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"role\");\r\n  window.location.href = \"/std_log\"; // or use navigate(\"/student-login\") if using react-router\r\n};\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"dashboard-wrapper\">\r\n      {user ? (\r\n      <div className=\"dashboard-header\">\r\n        <button className=\"logout-button\" onClick={handleLogout}>\r\n        Logout\r\n        </button>\r\n      </div>\r\n      ) : (\r\n      <p>Loading...</p>\r\n      )}\r\n\r\n      <div className=\"dashboard-container\">\r\n      <h1>Student Dashboard</h1>\r\n      {user ? <h2>Welcome, {user.name}!</h2> : <p>Loading...</p>}\r\n\r\n      {/* Selection Form */}\r\n      <div className=\"selection-container\">\r\n        <label htmlFor=\"day\">Day:</label>\r\n        <select\r\n          id=\"day\"\r\n          value={selectedDay}\r\n          onChange={(e) => setSelectedDay(e.target.value)}\r\n        >\r\n          {days.map((day, index) => (\r\n            <option key={index} value={day}>\r\n              {day}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"time\">Time:</label>\r\n        <select\r\n          id=\"time\"\r\n          value={selectedTime}\r\n          onChange={(e) => setSelectedTime(e.target.value)}\r\n        >\r\n          {timeSlots.map((time, index) => (\r\n            <option key={index} value={time}>\r\n              {time}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <button className=\"search-button\" onClick={handleSearch}>\r\n          Search\r\n        </button>\r\n\r\n        <button className=\"reset-button\" onClick={handleReset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      {/* Block Filters as Checkboxes */}\r\n      <div className=\"block-filter\">\r\n        {blocks.map((block, index) => (\r\n          <label key={index} className=\"block-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              value={block}\r\n              checked={selectedBlocks.includes(block)}\r\n              onChange={() => handleBlockCheckboxChange(block)}\r\n            />\r\n            {block}\r\n          </label>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Search Bar */}\r\n      <div className=\"search-bar-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search room number...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"room-search-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Available Rooms grouped by block */}\r\n      <div className=\"room-container\">\r\n        <h3>Available Rooms</h3>\r\n        {Object.keys(groupedRooms).length > 0 ? (\r\n          Object.entries(groupedRooms).map(([block, rooms]) => {\r\n            const filteredBySearch = rooms.filter((room) =>\r\n              (room[\"ROOM NUMBER\"] || room.roomNumber || \"\")\r\n                .toLowerCase()\r\n                .includes(searchTerm.toLowerCase())\r\n            );\r\n            if (filteredBySearch.length === 0) return null;\r\n            return (\r\n              <div key={block} className=\"block-group\">\r\n                <h4>{block}</h4>\r\n                <div className=\"room-grid\">\r\n                  {filteredBySearch.map((room, idx) => (\r\n                    <button\r\n                      key={idx}\r\n                      className=\"room-box\"\r\n                     // onClick={() => handleRoomClick(room)}\r\n                    >\r\n                      {room[\"ROOM NUMBER\"] || room.roomNumber || \"No Room Name\"}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No rooms available for this slot.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n{/* Chat Toggle Button */}\r\n<div className=\"chat-box\" onClick={toggleChat}>\r\n</div>\r\n\r\n{isChatOpen && (\r\n  <div className=\"chat-popup\">\r\n    <div className=\"chat-header\">\r\n      <span>ChatBot</span>\r\n      <span className=\"close-btn\" onClick={toggleChat}>×</span>\r\n    </div>\r\n    <div className=\"chat-body\">\r\n      {messages.map((msg, index) => (\r\n        <div key={index} className=\"chat-message user\">{msg}</div>\r\n      ))}\r\n    </div>\r\n    <div className=\"chat-input-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Type your message...\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") handleSendMessage();\r\n        }}\r\n        className=\"chat-input\"\r\n      />\r\n      <button onClick={handleSendMessage} className=\"chat-send-btn\">Send</button>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\n    </div>\r\n\r\n);\r\n}\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}