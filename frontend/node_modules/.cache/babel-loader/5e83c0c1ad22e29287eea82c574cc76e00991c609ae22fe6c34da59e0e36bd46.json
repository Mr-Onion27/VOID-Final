{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-app\\\\frontend\\\\src\\\\components\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/admin_login.css'; // üëà Rename your new cool CSS here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminLogin() {\n  _s();\n  const navigate = useNavigate();\n  const [showNotification, setShowNotification] = useState(false);\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [adminID, setAdminID] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const togglePassword = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n  const validateAdminForm = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setShowNotification(false);\n    if (!adminID.trim() || !password.trim()) {\n      setErrorMessage('Both fields are required.');\n      setShowNotification(true);\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.post(\"http://localhost:5000/api/auth/admin/login\", {\n        adminID,\n        password\n      });\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"role\", \"admin\");\n      alert(\"Login successful!\");\n      navigate(\"/admin-dashboard\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed. Please try again.\");\n      setShowNotification(true);\n      setTimeout(() => setShowNotification(false), 3000);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"admin_log\",\n    children: [showNotification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-btn\",\n        onClick: () => setShowNotification(false),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: validateAdminForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"adminID\",\n          children: \"Admin ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"adminID\",\n          type: \"text\",\n          placeholder: \"Enter Admin ID\",\n          value: adminID,\n          onChange: e => setAdminID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: passwordVisible ? 'text' : 'password',\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle-password\",\n            onClick: togglePassword,\n            children: \"\\uD83D\\uDC41\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: loading ? \"Logging in...\" : \"Login\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminLogin, \"hGXGEskA7IC8Knfoj4jEw2gHuow=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","navigate","showNotification","setShowNotification","passwordVisible","setPasswordVisible","adminID","setAdminID","password","setPassword","errorMessage","setErrorMessage","loading","setLoading","togglePassword","validateAdminForm","e","preventDefault","trim","response","post","localStorage","setItem","data","token","alert","error","_error$response","_error$response$data","message","setTimeout","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["D:/my-app/frontend/src/components/AdminLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../css/admin_login.css'; // üëà Rename your new cool CSS here\r\n\r\nfunction AdminLogin() {\r\n    const navigate = useNavigate();\r\n\r\n    const [showNotification, setShowNotification] = useState(false);\r\n    const [passwordVisible, setPasswordVisible] = useState(false);\r\n    const [adminID, setAdminID] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const togglePassword = () => {\r\n        setPasswordVisible(!passwordVisible);\r\n    };\r\n\r\n    const validateAdminForm = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage('');\r\n        setShowNotification(false);\r\n\r\n        if (!adminID.trim() || !password.trim()) {\r\n            setErrorMessage('Both fields are required.');\r\n            setShowNotification(true);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n\r\n            const response = await axios.post(\"http://localhost:5000/api/auth/admin/login\", { adminID, password });\r\n\r\n            localStorage.setItem(\"token\", response.data.token);\r\n            localStorage.setItem(\"role\", \"admin\");\r\n\r\n            alert(\"Login successful!\");\r\n            navigate(\"/admin-dashboard\");\r\n\r\n        } catch (error) {\r\n            setErrorMessage(error.response?.data?.message || \"Login failed. Please try again.\");\r\n            setShowNotification(true);\r\n            setTimeout(() => setShowNotification(false), 3000);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"admin_log\">\r\n            {showNotification && (\r\n                <div className=\"notification\">\r\n                    <i>‚ö†Ô∏è</i> <span>{errorMessage}</span>\r\n                    <span className=\"close-btn\" onClick={() => setShowNotification(false)}>‚úñ</span>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"c2\">\r\n                <h2>Admin Login</h2>\r\n                <form onSubmit={validateAdminForm}>\r\n                    <label htmlFor=\"adminID\">Admin ID</label>\r\n                    <input\r\n                        id=\"adminID\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Admin ID\"\r\n                        value={adminID}\r\n                        onChange={(e) => setAdminID(e.target.value)}\r\n                    />\r\n\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <div className=\"password-container\">\r\n                        <input\r\n                            id=\"password\"\r\n                            type={passwordVisible ? 'text' : 'password'}\r\n                            placeholder=\"Enter Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <span className=\"toggle-password\" onClick={togglePassword}>üëÅÔ∏è</span>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={loading ? \"Logging in...\" : \"Login\"}\r\n                        disabled={loading}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}