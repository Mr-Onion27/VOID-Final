{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/SessionGuard.js\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nconst SessionGuard = () => {\n  _s();\n  const location = useLocation();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\n    const handlePageShow = event => {\n      var _performance$getEntri;\n      const navType = (_performance$getEntri = performance.getEntriesByType(\"navigation\")[0]) === null || _performance$getEntri === void 0 ? void 0 : _performance$getEntri.type;\n      if ((event.persisted || navType === \"back_forward\") && (!token || !isLoggedIn)) {\n        window.location.href = \"/?error=500\"; // Force to Home if session is invalid\n      }\n    };\n    window.addEventListener(\"pageshow\", handlePageShow);\n    return () => {\n      window.removeEventListener(\"pageshow\", handlePageShow);\n    };\n  }, [location]);\n  return null; // this component doesn't render anything\n};\n_s(SessionGuard, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = SessionGuard;\nexport default SessionGuard;\nvar _c;\n$RefreshReg$(_c, \"SessionGuard\");","map":{"version":3,"names":["useEffect","useLocation","SessionGuard","_s","location","token","localStorage","getItem","isLoggedIn","sessionStorage","handlePageShow","event","_performance$getEntri","navType","performance","getEntriesByType","type","persisted","window","href","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["D:/my-app/frontend/src/sessionGuard.js"],"sourcesContent":["// src/components/SessionGuard.js\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst SessionGuard = () => {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\r\n\r\n    const handlePageShow = (event) => {\r\n      const navType = performance.getEntriesByType(\"navigation\")[0]?.type;\r\n      if ((event.persisted || navType === \"back_forward\") && (!token || !isLoggedIn)) {\r\n        window.location.href = \"/?error=500\"; // Force to Home if session is invalid\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"pageshow\", handlePageShow);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"pageshow\", handlePageShow);\r\n    };\r\n  }, [location]);\r\n\r\n  return null; // this component doesn't render anything\r\n};\r\n\r\nexport default SessionGuard;\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGC,cAAc,CAACF,OAAO,CAAC,YAAY,CAAC;IAEvD,MAAMG,cAAc,GAAIC,KAAK,IAAK;MAAA,IAAAC,qBAAA;MAChC,MAAMC,OAAO,IAAAD,qBAAA,GAAGE,WAAW,CAACC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAAH,qBAAA,uBAA7CA,qBAAA,CAA+CI,IAAI;MACnE,IAAI,CAACL,KAAK,CAACM,SAAS,IAAIJ,OAAO,KAAK,cAAc,MAAM,CAACR,KAAK,IAAI,CAACG,UAAU,CAAC,EAAE;QAC9EU,MAAM,CAACd,QAAQ,CAACe,IAAI,GAAG,aAAa,CAAC,CAAC;MACxC;IACF,CAAC;IAEDD,MAAM,CAACE,gBAAgB,CAAC,UAAU,EAAEV,cAAc,CAAC;IAEnD,OAAO,MAAM;MACXQ,MAAM,CAACG,mBAAmB,CAAC,UAAU,EAAEX,cAAc,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,EAAA,CAtBID,YAAY;EAAA,QACCD,WAAW;AAAA;AAAAqB,EAAA,GADxBpB,YAAY;AAwBlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}